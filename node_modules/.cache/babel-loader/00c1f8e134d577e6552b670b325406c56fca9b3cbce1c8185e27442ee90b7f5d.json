{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\INTERVIEW PROCESS\\\\INTERVIEW PROCESS\\\\client\\\\src\\\\components\\\\QuestionImporter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Table, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionImporter() {\n  _s();\n  const [documentStatus, setDocumentStatus] = useState(null);\n  const [importing, setImporting] = useState(false);\n  const [uploadingFile, setUploadingFile] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const [parsedQuestions, setParsedQuestions] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  useEffect(() => {\n    checkDocumentStatus();\n  }, []);\n  const checkDocumentStatus = async () => {\n    try {\n      const response = await axios.get('/api/import/document-status');\n      setDocumentStatus(response.data);\n    } catch (error) {\n      console.error('Failed to check document status:', error);\n    }\n  };\n  const importFromExistingDocument = async () => {\n    setImporting(true);\n    setAlert(null);\n    try {\n      const response = await axios.post('/api/import/import-from-document');\n      setAlert({\n        type: 'success',\n        message: `${response.data.message}. The questions are now available for tests.`\n      });\n\n      // Show preview of imported questions\n      if (response.data.questions_preview) {\n        setParsedQuestions(response.data.questions_preview);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setAlert({\n        type: 'danger',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to import questions from document'\n      });\n    } finally {\n      setImporting(false);\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setSelectedFile(file);\n    setUploadingFile(true);\n    setAlert(null);\n    const formData = new FormData();\n    formData.append('document', file);\n    try {\n      const response = await axios.post('/api/import/upload-document', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setParsedQuestions(response.data.questions);\n      setAlert({\n        type: 'info',\n        message: `Found ${response.data.questions.length} questions in the uploaded document. Review and save them.`\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setAlert({\n        type: 'danger',\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to parse uploaded document'\n      });\n    } finally {\n      setUploadingFile(false);\n    }\n  };\n  const saveQuestionsToDatabase = async () => {\n    if (parsedQuestions.length === 0) return;\n    setImporting(true);\n    setAlert(null);\n    try {\n      const response = await axios.post('/api/import/save-questions', {\n        questions: parsedQuestions\n      });\n      setAlert({\n        type: 'success',\n        message: response.data.message\n      });\n      setParsedQuestions([]);\n      setSelectedFile(null);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setAlert({\n        type: 'danger',\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to save questions to database'\n      });\n    } finally {\n      setImporting(false);\n    }\n  };\n  const removeQuestion = index => {\n    const updated = parsedQuestions.filter((_, i) => i !== index);\n    setParsedQuestions(updated);\n  };\n  const editQuestion = (index, field, value) => {\n    const updated = [...parsedQuestions];\n    updated[index][field] = value;\n    setParsedQuestions(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 10,\n        className: \"mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Question Importer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), alert && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: alert.type,\n          className: \"mb-4\",\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Import from Existing Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [documentStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Document:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), \" \", documentStatus.document_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 78\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this), ' ', documentStatus.document_exists ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-success\",\n                  children: \"\\u2713 Found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: \"\\u2717 Not found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: importFromExistingDocument,\n              disabled: importing || !(documentStatus !== null && documentStatus !== void 0 && documentStatus.document_exists),\n              children: importing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  as: \"span\",\n                  animation: \"border\",\n                  size: \"sm\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\",\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), \"Importing...\"]\n              }, void 0, true) : 'Import Questions from Document'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), !(documentStatus !== null && documentStatus !== void 0 && documentStatus.document_exists) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-muted mt-2\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"The document \\\"interview Questions and Answers.docx\\\" was not found in the project directory. Please upload a new document below.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Upload New Document\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Select Word Document (.docx)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                accept: \".docx\",\n                onChange: handleFileUpload,\n                disabled: uploadingFile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Upload a Word document containing VLSI questions and answers. Format: Q1: Question text A1: Answer text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), uploadingFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                role: \"status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"visually-hidden\",\n                  children: \"Parsing document...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2\",\n                children: \"Parsing document...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), parsedQuestions.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: [\"Parsed Questions (\", parsedQuestions.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: saveQuestionsToDatabase,\n              disabled: importing,\n              children: importing ? 'Saving...' : 'Save to Database'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                maxHeight: '400px',\n                overflowY: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                striped: true,\n                bordered: true,\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '5%'\n                      },\n                      children: \"#\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '40%'\n                      },\n                      children: \"Question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '40%'\n                      },\n                      children: \"Answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '15%'\n                      },\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: parsedQuestions.map((qa, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                        as: \"textarea\",\n                        rows: 2,\n                        value: qa.question,\n                        onChange: e => editQuestion(index, 'question', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                        as: \"textarea\",\n                        rows: 2,\n                        value: qa.answer,\n                        onChange: e => editQuestion(index, 'answer', e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outline-danger\",\n                        size: \"sm\",\n                        onClick: () => removeQuestion(index),\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: \"Document Format Guidelines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"For best results, format your Word document as follows:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Q1:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this), \" What is VLSI?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"A1:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), \" VLSI stands for Very Large Scale Integration...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Q2:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this), \" Explain MOSFET operation?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"A2:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), \" A MOSFET is a voltage-controlled device...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-0\",\n              children: \"The system supports multiple formats including numbered questions, question/answer pairs, and simple Q&A formats.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionImporter, \"gSyCx4vHCbepQKuFLv4qoGOhP4A=\");\n_c = QuestionImporter;\nexport default QuestionImporter;\nvar _c;\n$RefreshReg$(_c, \"QuestionImporter\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","Alert","Spinner","Table","Form","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionImporter","_s","documentStatus","setDocumentStatus","importing","setImporting","uploadingFile","setUploadingFile","alert","setAlert","parsedQuestions","setParsedQuestions","selectedFile","setSelectedFile","checkDocumentStatus","response","get","data","error","console","importFromExistingDocument","post","type","message","questions_preview","_error$response","_error$response$data","handleFileUpload","event","file","target","files","formData","FormData","append","headers","questions","length","_error$response2","_error$response2$data","saveQuestionsToDatabase","_error$response3","_error$response3$data","removeQuestion","index","updated","filter","_","i","editQuestion","field","value","children","lg","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","Header","Body","document_name","document_exists","onClick","disabled","as","animation","size","role","Group","Label","Control","accept","onChange","Text","style","maxHeight","overflowY","striped","bordered","hover","width","map","qa","rows","question","e","answer","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/INTERVIEW PROCESS/INTERVIEW PROCESS/client/src/components/QuestionImporter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Card, Button, Alert, Spinner, Table, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction QuestionImporter() {\r\n  const [documentStatus, setDocumentStatus] = useState(null);\r\n  const [importing, setImporting] = useState(false);\r\n  const [uploadingFile, setUploadingFile] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n  const [parsedQuestions, setParsedQuestions] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    checkDocumentStatus();\r\n  }, []);\r\n\r\n  const checkDocumentStatus = async () => {\r\n    try {\r\n      const response = await axios.get('/api/import/document-status');\r\n      setDocumentStatus(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to check document status:', error);\r\n    }\r\n  };\r\n\r\n  const importFromExistingDocument = async () => {\r\n    setImporting(true);\r\n    setAlert(null);\r\n\r\n    try {\r\n      const response = await axios.post('/api/import/import-from-document');\r\n      \r\n      setAlert({\r\n        type: 'success',\r\n        message: `${response.data.message}. The questions are now available for tests.`\r\n      });\r\n\r\n      // Show preview of imported questions\r\n      if (response.data.questions_preview) {\r\n        setParsedQuestions(response.data.questions_preview);\r\n      }\r\n\r\n    } catch (error) {\r\n      setAlert({\r\n        type: 'danger',\r\n        message: error.response?.data?.error || 'Failed to import questions from document'\r\n      });\r\n    } finally {\r\n      setImporting(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    setSelectedFile(file);\r\n    setUploadingFile(true);\r\n    setAlert(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('document', file);\r\n\r\n    try {\r\n      const response = await axios.post('/api/import/upload-document', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setParsedQuestions(response.data.questions);\r\n      setAlert({\r\n        type: 'info',\r\n        message: `Found ${response.data.questions.length} questions in the uploaded document. Review and save them.`\r\n      });\r\n\r\n    } catch (error) {\r\n      setAlert({\r\n        type: 'danger',\r\n        message: error.response?.data?.error || 'Failed to parse uploaded document'\r\n      });\r\n    } finally {\r\n      setUploadingFile(false);\r\n    }\r\n  };\r\n\r\n  const saveQuestionsToDatabase = async () => {\r\n    if (parsedQuestions.length === 0) return;\r\n\r\n    setImporting(true);\r\n    setAlert(null);\r\n\r\n    try {\r\n      const response = await axios.post('/api/import/save-questions', {\r\n        questions: parsedQuestions\r\n      });\r\n\r\n      setAlert({\r\n        type: 'success',\r\n        message: response.data.message\r\n      });\r\n\r\n      setParsedQuestions([]);\r\n      setSelectedFile(null);\r\n\r\n    } catch (error) {\r\n      setAlert({\r\n        type: 'danger',\r\n        message: error.response?.data?.error || 'Failed to save questions to database'\r\n      });\r\n    } finally {\r\n      setImporting(false);\r\n    }\r\n  };\r\n\r\n  const removeQuestion = (index) => {\r\n    const updated = parsedQuestions.filter((_, i) => i !== index);\r\n    setParsedQuestions(updated);\r\n  };\r\n\r\n  const editQuestion = (index, field, value) => {\r\n    const updated = [...parsedQuestions];\r\n    updated[index][field] = value;\r\n    setParsedQuestions(updated);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col lg={10} className=\"mx-auto\">\r\n          <h2 className=\"mb-4\">Question Importer</h2>\r\n\r\n          {alert && (\r\n            <Alert variant={alert.type} className=\"mb-4\">\r\n              {alert.message}\r\n            </Alert>\r\n          )}\r\n\r\n          {/* Existing Document Import */}\r\n          <Card className=\"mb-4\">\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Import from Existing Document</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {documentStatus && (\r\n                <div className=\"mb-3\">\r\n                  <p>\r\n                    <strong>Document:</strong> {documentStatus.document_name}<br />\r\n                    <strong>Status:</strong>{' '}\r\n                    {documentStatus.document_exists ? (\r\n                      <span className=\"text-success\">✓ Found</span>\r\n                    ) : (\r\n                      <span className=\"text-danger\">✗ Not found</span>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={importFromExistingDocument}\r\n                disabled={importing || !documentStatus?.document_exists}\r\n              >\r\n                {importing ? (\r\n                  <>\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                      className=\"me-2\"\r\n                    />\r\n                    Importing...\r\n                  </>\r\n                ) : (\r\n                  'Import Questions from Document'\r\n                )}\r\n              </Button>\r\n\r\n              {!documentStatus?.document_exists && (\r\n                <div className=\"text-muted mt-2\">\r\n                  <small>\r\n                    The document \"interview Questions and Answers.docx\" was not found in the project directory.\r\n                    Please upload a new document below.\r\n                  </small>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          {/* Upload New Document */}\r\n          <Card className=\"mb-4\">\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Upload New Document</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Select Word Document (.docx)</Form.Label>\r\n                <Form.Control\r\n                  type=\"file\"\r\n                  accept=\".docx\"\r\n                  onChange={handleFileUpload}\r\n                  disabled={uploadingFile}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Upload a Word document containing VLSI questions and answers.\r\n                  Format: Q1: Question text A1: Answer text\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              {uploadingFile && (\r\n                <div className=\"text-center\">\r\n                  <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"visually-hidden\">Parsing document...</span>\r\n                  </Spinner>\r\n                  <p className=\"mt-2\">Parsing document...</p>\r\n                </div>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          {/* Preview Parsed Questions */}\r\n          {parsedQuestions.length > 0 && (\r\n            <Card className=\"mb-4\">\r\n              <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n                <h5 className=\"mb-0\">Parsed Questions ({parsedQuestions.length})</h5>\r\n                <Button\r\n                  variant=\"success\"\r\n                  onClick={saveQuestionsToDatabase}\r\n                  disabled={importing}\r\n                >\r\n                  {importing ? 'Saving...' : 'Save to Database'}\r\n                </Button>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div style={{ maxHeight: '400px', overflowY: 'auto' }}>\r\n                  <Table striped bordered hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th style={{ width: '5%' }}>#</th>\r\n                        <th style={{ width: '40%' }}>Question</th>\r\n                        <th style={{ width: '40%' }}>Answer</th>\r\n                        <th style={{ width: '15%' }}>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {parsedQuestions.map((qa, index) => (\r\n                        <tr key={index}>\r\n                          <td>{index + 1}</td>\r\n                          <td>\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              rows={2}\r\n                              value={qa.question}\r\n                              onChange={(e) => editQuestion(index, 'question', e.target.value)}\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              rows={2}\r\n                              value={qa.answer}\r\n                              onChange={(e) => editQuestion(index, 'answer', e.target.value)}\r\n                            />\r\n                          </td>\r\n                          <td>\r\n                            <Button\r\n                              variant=\"outline-danger\"\r\n                              size=\"sm\"\r\n                              onClick={() => removeQuestion(index)}\r\n                            >\r\n                              Remove\r\n                            </Button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          )}\r\n\r\n          {/* Instructions */}\r\n          <Card>\r\n            <Card.Header>\r\n              <h5 className=\"mb-0\">Document Format Guidelines</h5>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <p>For best results, format your Word document as follows:</p>\r\n              <ul>\r\n                <li><strong>Q1:</strong> What is VLSI?</li>\r\n                <li><strong>A1:</strong> VLSI stands for Very Large Scale Integration...</li>\r\n                <li><strong>Q2:</strong> Explain MOSFET operation?</li>\r\n                <li><strong>A2:</strong> A MOSFET is a voltage-controlled device...</li>\r\n              </ul>\r\n              <p className=\"mb-0\">\r\n                The system supports multiple formats including numbered questions,\r\n                question/answer pairs, and simple Q&A formats.\r\n              </p>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default QuestionImporter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}