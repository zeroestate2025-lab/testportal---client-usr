{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\INTERVIEW PROCESS\\\\INTERVIEW PROCESS\\\\client\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/AdminDashboard.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminDashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [results, setResults] = useState([]);\n  const [form, setForm] = useState({\n    questionText: \"\",\n    optionsText: \"\",\n    correctAnswer: \"\"\n  });\n  const [questionType, setQuestionType] = useState(\"MCQ\");\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingResults, setLoadingResults] = useState(false);\n\n  // 🟢 Check admin login (token validation)\n  useEffect(() => {\n    const token = localStorage.getItem(\"adminToken\");\n    if (!token) navigate(\"/admin/login\");\n  }, [navigate]);\n\n  // 🟢 Fetch questions and test results on load\n  useEffect(() => {\n    fetchQuestions();\n    fetchResults();\n  }, []);\n  const fetchQuestions = async () => {\n    try {\n      const res = await API.get(\"/questions\");\n      setQuestions(res.data || []);\n    } catch (err) {\n      console.error(err);\n      alert(\"❌ Failed to load questions.\");\n    }\n  };\n  const fetchResults = async () => {\n    setLoadingResults(true);\n    try {\n      const res = await API.get(\"/tests\");\n      setResults(res.data || []);\n    } catch (err) {\n      console.error(err);\n      alert(\"❌ Failed to load test results.\");\n    } finally {\n      setLoadingResults(false);\n    }\n  };\n\n  // 🟢 Add Question Manually\n  const handleAddQuestion = async e => {\n    e.preventDefault();\n    const opts = questionType === \"MCQ\" ? form.optionsText.split(\"|\").map(s => s.trim()).filter(Boolean) : [];\n    if (!form.questionText.trim()) {\n      return alert(\"Please enter question text.\");\n    }\n    if (questionType === \"MCQ\" && (opts.length < 2 || !form.correctAnswer.trim())) {\n      return alert(\"Please enter at least 2 options and a correct answer.\");\n    }\n    setLoading(true);\n    try {\n      await API.post(\"/questions\", {\n        questionType,\n        questionText: form.questionText,\n        options: opts,\n        correctAnswer: questionType === \"MCQ\" ? form.correctAnswer : \"\"\n      });\n      setForm({\n        questionText: \"\",\n        optionsText: \"\",\n        correctAnswer: \"\"\n      });\n      await fetchQuestions();\n      alert(\"✅ Question added successfully!\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Failed to add question.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 🟢 Upload .docx question file\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file to upload.\");\n    const fd = new FormData();\n    fd.append(\"file\", file);\n    try {\n      const res = await API.post(\"/questions/upload\", fd, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(res.data.message || \"✅ File uploaded successfully!\");\n      await fetchQuestions();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(err);\n      alert(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"❌ File upload failed.\");\n    }\n  };\n\n  // 🟢 Logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"adminToken\");\n    navigate(\"/admin/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container container-center py-4 admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-3 admin-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-danger btn-sm\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Add questions or upload documents that will be shown to candidates.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddQuestion,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Question Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-select\",\n                value: questionType,\n                onChange: e => setQuestionType(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"MCQ\",\n                  children: \"MCQ\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Theory\",\n                  children: \"Theory\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Question Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"form-control\",\n                rows: questionType === \"Theory\" ? 3 : 2,\n                value: form.questionText,\n                onChange: e => setForm({\n                  ...form,\n                  questionText: e.target.value\n                }),\n                placeholder: \"Enter your question here...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this), questionType === \"MCQ\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Options (separate by |)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  value: form.optionsText,\n                  onChange: e => setForm({\n                    ...form,\n                    optionsText: e.target.value\n                  }),\n                  placeholder: \"Option A | Option B | Option C | Option D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Correct Answer (exact text of one option)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  value: form.correctAnswer,\n                  onChange: e => setForm({\n                    ...form,\n                    correctAnswer: e.target.value\n                  }),\n                  placeholder: \"Enter correct answer text\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                type: \"submit\",\n                disabled: loading,\n                children: loading ? \"Adding...\" : \"Add Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: () => setForm({\n                  questionText: \"\",\n                  optionsText: \"\",\n                  correctAnswer: \"\"\n                }),\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Upload Document (.docx)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"form-control\",\n              accept: \".docx\",\n              onChange: e => setFile(e.target.files[0])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: handleUpload,\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card available-questions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Available Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mt-3 text-primary\",\n            children: \"MCQ Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this), questions.filter(q => q.questionType === \"MCQ\").length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-muted\",\n            children: \"No MCQs yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), questions.filter(q => q.questionType === \"MCQ\").map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 border-bottom pb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Q\", idx + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), \" \", q.questionText, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small text-muted\",\n              children: [\"Options: \", q.options.join(\" | \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"small text-success\",\n              children: [\"Correct: \", q.correctAnswer]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, q._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mt-4 text-primary\",\n            children: \"Theory Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this), questions.filter(q => q.questionType === \"Theory\").length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-muted\",\n            children: \"No theory questions yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), questions.filter(q => q.questionType === \"Theory\").map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 border-bottom pb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Q\", idx + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), \" \", q.questionText]\n          }, q._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Candidate Test Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }, this), loadingResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading test results...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this) : results.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-muted\",\n          children: \"No test results yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"results-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Score %\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Submitted At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: results.map((res, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: res.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: res.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: res.totalQuestions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: res.correctAnswers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [res.scorePercent, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(res.submittedAt).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 3\n  }, this);\n}\n\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../services/api\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/AdminDashboard.css\";\n\n// export default function AdminDashboard() {\n//   const navigate = useNavigate();\n//   const [questions, setQuestions] = useState([]);\n//   const [form, setForm] = useState({\n//     questionText: \"\",\n//     optionsText: \"\",\n//     correctAnswer: \"\",\n//   });\n//   const [questionType, setQuestionType] = useState(\"MCQ\");\n//   const [file, setFile] = useState(null);\n//   const [loading, setLoading] = useState(false);\n\n//   // 🟢 Check admin login (token validation)\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"adminToken\");\n//     if (!token) navigate(\"/admin/login\");\n//   }, [navigate]);\n\n//   // 🟢 Fetch questions from DB\n//   useEffect(() => {\n//     fetchQuestions();\n//   }, []);\n\n//   const fetchQuestions = async () => {\n//     try {\n//       const res = await API.get(\"/questions\");\n//       setQuestions(res.data || []);\n//     } catch (err) {\n//       console.error(err);\n//       alert(\"Failed to load questions.\");\n//     }\n//   };\n\n//   // 🟢 Add Question Manually\n//   const handleAddQuestion = async (e) => {\n//     e.preventDefault();\n//     const opts =\n//       questionType === \"MCQ\"\n//         ? form.optionsText.split(\"|\").map((s) => s.trim()).filter(Boolean)\n//         : [];\n\n//     if (!form.questionText.trim()) {\n//       return alert(\"Please enter question text.\");\n//     }\n//     if (questionType === \"MCQ\" && (opts.length < 2 || !form.correctAnswer.trim())) {\n//       return alert(\"Please enter at least 2 options and a correct answer.\");\n//     }\n\n//     setLoading(true);\n//     try {\n//       await API.post(\"/questions\", {\n//         questionType,\n//         questionText: form.questionText,\n//         options: opts,\n//         correctAnswer: questionType === \"MCQ\" ? form.correctAnswer : \"\",\n//       });\n\n//       setForm({ questionText: \"\", optionsText: \"\", correctAnswer: \"\" });\n//       await fetchQuestions();\n//       alert(\"✅ Question added successfully!\");\n//     } catch (err) {\n//       console.error(err);\n//       alert(err.response?.data?.error || \"Failed to add question.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   // 🟢 Upload .docx question file\n//   const handleUpload = async () => {\n//     if (!file) return alert(\"Please select a file to upload.\");\n//     const fd = new FormData();\n//     fd.append(\"file\", file);\n\n//     try {\n//       const res = await API.post(\"/questions/upload\", fd, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n//       alert(res.data.message || \"File uploaded successfully!\");\n//       await fetchQuestions();\n//     } catch (err) {\n//       console.error(err);\n//       alert(err.response?.data?.error || \"File upload failed.\");\n//     }\n//   };\n\n//   // 🟢 Logout\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"adminToken\");\n//     navigate(\"/admin/login\");\n//   };\n\n//   return (\n//     <div className=\"container container-center py-4\">\n//       <div className=\"d-flex justify-content-between align-items-center mb-3\">\n//         <h2>Admin Dashboard</h2>\n//         <button className=\"btn btn-outline-danger btn-sm\" onClick={handleLogout}>\n//           Logout\n//         </button>\n//       </div>\n\n//       <div className=\"card card-clean p-4 mb-4\">\n//         <h5>Add questions or upload documents that will be shown to candidates.</h5>\n\n//         {/* Add Question Form */}\n//         <form onSubmit={handleAddQuestion} className=\"mt-3\">\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Question Type</label>\n//             <select\n//               className=\"form-select\"\n//               value={questionType}\n//               onChange={(e) => setQuestionType(e.target.value)}\n//             >\n//               <option value=\"MCQ\">MCQ</option>\n//               <option value=\"Theory\">Theory</option>\n//             </select>\n//           </div>\n\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Question Text</label>\n//             <textarea\n//               className=\"form-control\"\n//               rows={questionType === \"Theory\" ? 3 : 2}\n//               value={form.questionText}\n//               onChange={(e) => setForm({ ...form, questionText: e.target.value })}\n//               placeholder=\"Enter your question here...\"\n//             />\n//           </div>\n\n//           {questionType === \"MCQ\" && (\n//             <>\n//               <div className=\"mb-3\">\n//                 <label className=\"form-label\">Options (separate by |)</label>\n//                 <input\n//                   className=\"form-control\"\n//                   value={form.optionsText}\n//                   onChange={(e) =>\n//                     setForm({ ...form, optionsText: e.target.value })\n//                   }\n//                   placeholder=\"Option A | Option B | Option C | Option D\"\n//                 />\n//               </div>\n\n//               <div className=\"mb-3\">\n//                 <label className=\"form-label\">\n//                   Correct Answer (exact text of one option)\n//                 </label>\n//                 <input\n//                   className=\"form-control\"\n//                   value={form.correctAnswer}\n//                   onChange={(e) =>\n//                     setForm({ ...form, correctAnswer: e.target.value })\n//                   }\n//                   placeholder=\"Enter correct answer text\"\n//                 />\n//               </div>\n//             </>\n//           )}\n\n//           <div className=\"mb-3 d-flex gap-2\">\n//             <button\n//               className=\"btn btn-success\"\n//               type=\"submit\"\n//               disabled={loading}\n//             >\n//               {loading ? \"Adding...\" : \"Add Question\"}\n//             </button>\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-secondary\"\n//               onClick={() =>\n//                 setForm({ questionText: \"\", optionsText: \"\", correctAnswer: \"\" })\n//               }\n//             >\n//               Clear\n//             </button>\n//           </div>\n//         </form>\n\n//         <hr className=\"my-4\" />\n\n//         {/* Upload Document Section */}\n//         <div className=\"mb-3\">\n//           <label className=\"form-label\">Upload Document (.docx)</label>\n//           <input\n//             type=\"file\"\n//             className=\"form-control\"\n//             accept=\".docx\"\n//             onChange={(e) => setFile(e.target.files[0])}\n//           />\n//           <div className=\"mt-2\">\n//             <button className=\"btn btn-primary\" onClick={handleUpload}>\n//               Upload\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Display All Questions */}\n//       <div className=\"card card-clean p-4\">\n//         <h5>Available Questions</h5>\n\n//         {/* MCQ Section */}\n//         <h6 className=\"mt-3 text-primary\">MCQ Questions</h6>\n//         {questions.filter((q) => q.questionType === \"MCQ\").length === 0 && (\n//           <div className=\"text-muted\">No MCQs yet</div>\n//         )}\n//         {questions\n//           .filter((q) => q.questionType === \"MCQ\")\n//           .map((q, idx) => (\n//             <div key={q._id} className=\"mb-3 border-bottom pb-2\">\n//               <strong>Q{idx + 1}:</strong> {q.questionText}\n//               <div className=\"small text-muted\">\n//                 Options: {q.options.join(\" | \")}\n//               </div>\n//               <div className=\"small text-success\">\n//                 Correct: {q.correctAnswer}\n//               </div>\n//             </div>\n//           ))}\n\n//         {/* Theory Section */}\n//         <h6 className=\"mt-4 text-primary\">Theory Questions</h6>\n//         {questions.filter((q) => q.questionType === \"Theory\").length === 0 && (\n//           <div className=\"text-muted\">No theory questions yet</div>\n//         )}\n//         {questions\n//           .filter((q) => q.questionType === \"Theory\")\n//           .map((q, idx) => (\n//             <div key={q._id} className=\"mb-3 border-bottom pb-2\">\n//               <strong>Q{idx + 1}:</strong> {q.questionText}\n//             </div>\n//           ))}\n//       </div>\n//     </div>\n//   );\n// }\n_s(AdminDashboard, \"gSidITdpjyiUZu+ejZTVKm64K0Q=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","navigate","questions","setQuestions","results","setResults","form","setForm","questionText","optionsText","correctAnswer","questionType","setQuestionType","file","setFile","loading","setLoading","loadingResults","setLoadingResults","token","localStorage","getItem","fetchQuestions","fetchResults","res","get","data","err","console","error","alert","handleAddQuestion","e","preventDefault","opts","split","map","s","trim","filter","Boolean","length","post","options","_err$response","_err$response$data","response","handleUpload","fd","FormData","append","headers","message","_err$response2","_err$response2$data","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","value","onChange","target","rows","placeholder","type","disabled","accept","files","q","idx","join","_id","name","email","totalQuestions","correctAnswers","scorePercent","Date","submittedAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/INTERVIEW PROCESS/INTERVIEW PROCESS/client/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API from \"../services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/AdminDashboard.css\";\r\n\r\nexport default function AdminDashboard() {\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [form, setForm] = useState({\r\n    questionText: \"\",\r\n    optionsText: \"\",\r\n    correctAnswer: \"\",\r\n  });\r\n  const [questionType, setQuestionType] = useState(\"MCQ\");\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingResults, setLoadingResults] = useState(false);\r\n\r\n  // 🟢 Check admin login (token validation)\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"adminToken\");\r\n    if (!token) navigate(\"/admin/login\");\r\n  }, [navigate]);\r\n\r\n  // 🟢 Fetch questions and test results on load\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n    fetchResults();\r\n  }, []);\r\n\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const res = await API.get(\"/questions\");\r\n      setQuestions(res.data || []);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"❌ Failed to load questions.\");\r\n    }\r\n  };\r\n\r\n  const fetchResults = async () => {\r\n    setLoadingResults(true);\r\n    try {\r\n      const res = await API.get(\"/tests\");\r\n      setResults(res.data || []);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"❌ Failed to load test results.\");\r\n    } finally {\r\n      setLoadingResults(false);\r\n    }\r\n  };\r\n\r\n  // 🟢 Add Question Manually\r\n  const handleAddQuestion = async (e) => {\r\n    e.preventDefault();\r\n    const opts =\r\n      questionType === \"MCQ\"\r\n        ? form.optionsText.split(\"|\").map((s) => s.trim()).filter(Boolean)\r\n        : [];\r\n\r\n    if (!form.questionText.trim()) {\r\n      return alert(\"Please enter question text.\");\r\n    }\r\n    if (questionType === \"MCQ\" && (opts.length < 2 || !form.correctAnswer.trim())) {\r\n      return alert(\"Please enter at least 2 options and a correct answer.\");\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await API.post(\"/questions\", {\r\n        questionType,\r\n        questionText: form.questionText,\r\n        options: opts,\r\n        correctAnswer: questionType === \"MCQ\" ? form.correctAnswer : \"\",\r\n      });\r\n\r\n      setForm({ questionText: \"\", optionsText: \"\", correctAnswer: \"\" });\r\n      await fetchQuestions();\r\n      alert(\"✅ Question added successfully!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.response?.data?.error || \"Failed to add question.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 🟢 Upload .docx question file\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a file to upload.\");\r\n    const fd = new FormData();\r\n    fd.append(\"file\", file);\r\n\r\n    try {\r\n      const res = await API.post(\"/questions/upload\", fd, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      alert(res.data.message || \"✅ File uploaded successfully!\");\r\n      await fetchQuestions();\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(err.response?.data?.error || \"❌ File upload failed.\");\r\n    }\r\n  };\r\n\r\n  // 🟢 Logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"adminToken\");\r\n    navigate(\"/admin/login\");\r\n  };\r\n\r\n return (\r\n  <div className=\"container container-center py-4 admin-dashboard\">\r\n    {/* Header */}\r\n    <div className=\"d-flex justify-content-between align-items-center mb-3 admin-header\">\r\n      <h2>Admin Dashboard</h2>\r\n      <button className=\"btn btn-outline-danger btn-sm\" onClick={handleLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n\r\n    {/* Two-column grid layout */}\r\n    <div className=\"dashboard-grid\">\r\n      {/* LEFT SIDE: Questions & Upload */}\r\n      <div>\r\n        <div className=\"card form-section\">\r\n          <h5>Add questions or upload documents that will be shown to candidates.</h5>\r\n\r\n          <form onSubmit={handleAddQuestion}>\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Question Type</label>\r\n              <select\r\n                className=\"form-select\"\r\n                value={questionType}\r\n                onChange={(e) => setQuestionType(e.target.value)}\r\n              >\r\n                <option value=\"MCQ\">MCQ</option>\r\n                <option value=\"Theory\">Theory</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label className=\"form-label\">Question Text</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                rows={questionType === \"Theory\" ? 3 : 2}\r\n                value={form.questionText}\r\n                onChange={(e) => setForm({ ...form, questionText: e.target.value })}\r\n                placeholder=\"Enter your question here...\"\r\n              />\r\n            </div>\r\n\r\n            {questionType === \"MCQ\" && (\r\n              <>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Options (separate by |)</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    value={form.optionsText}\r\n                    onChange={(e) =>\r\n                      setForm({ ...form, optionsText: e.target.value })\r\n                    }\r\n                    placeholder=\"Option A | Option B | Option C | Option D\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">\r\n                    Correct Answer (exact text of one option)\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    value={form.correctAnswer}\r\n                    onChange={(e) =>\r\n                      setForm({ ...form, correctAnswer: e.target.value })\r\n                    }\r\n                    placeholder=\"Enter correct answer text\"\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            <div className=\"d-flex gap-2\">\r\n              <button className=\"btn btn-success\" type=\"submit\" disabled={loading}>\r\n                {loading ? \"Adding...\" : \"Add Question\"}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={() =>\r\n                  setForm({ questionText: \"\", optionsText: \"\", correctAnswer: \"\" })\r\n                }\r\n              >\r\n                Clear\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <hr className=\"my-4\" />\r\n\r\n          {/* Upload Document Section */}\r\n          <div className=\"upload-section\">\r\n            <label className=\"form-label\">Upload Document (.docx)</label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              accept=\".docx\"\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n            />\r\n            <div className=\"mt-2\">\r\n              <button className=\"btn btn-primary\" onClick={handleUpload}>\r\n                Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Available Questions */}\r\n        <div className=\"card available-questions\">\r\n          <h5>Available Questions</h5>\r\n          <h6 className=\"mt-3 text-primary\">MCQ Questions</h6>\r\n          {questions.filter((q) => q.questionType === \"MCQ\").length === 0 && (\r\n            <div className=\"text-muted\">No MCQs yet</div>\r\n          )}\r\n          {questions\r\n            .filter((q) => q.questionType === \"MCQ\")\r\n            .map((q, idx) => (\r\n              <div key={q._id} className=\"mb-3 border-bottom pb-2\">\r\n                <strong>Q{idx + 1}:</strong> {q.questionText}\r\n                <div className=\"small text-muted\">\r\n                  Options: {q.options.join(\" | \")}\r\n                </div>\r\n                <div className=\"small text-success\">\r\n                  Correct: {q.correctAnswer}\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n          <h6 className=\"mt-4 text-primary\">Theory Questions</h6>\r\n          {questions.filter((q) => q.questionType === \"Theory\").length === 0 && (\r\n            <div className=\"text-muted\">No theory questions yet</div>\r\n          )}\r\n          {questions\r\n            .filter((q) => q.questionType === \"Theory\")\r\n            .map((q, idx) => (\r\n              <div key={q._id} className=\"mb-3 border-bottom pb-2\">\r\n                <strong>Q{idx + 1}:</strong> {q.questionText}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* RIGHT SIDE: Candidate Results */}\r\n      <div className=\"card results-section\">\r\n        <h5>Candidate Test Results</h5>\r\n\r\n        {loadingResults ? (\r\n          <div>Loading test results...</div>\r\n        ) : results.length === 0 ? (\r\n          <div className=\"text-muted\">No test results yet</div>\r\n        ) : (\r\n          <table className=\"results-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Total Questions</th>\r\n                <th>Correct</th>\r\n                <th>Score %</th>\r\n                <th>Submitted At</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {results.map((res, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{res.name}</td>\r\n                  <td>{res.email}</td>\r\n                  <td>{res.totalQuestions}</td>\r\n                  <td>{res.correctAnswers}</td>\r\n                  <td>{res.scorePercent}%</td>\r\n                  <td>{new Date(res.submittedAt).toLocaleString()}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../services/api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../styles/AdminDashboard.css\";\r\n\r\n// export default function AdminDashboard() {\r\n//   const navigate = useNavigate();\r\n//   const [questions, setQuestions] = useState([]);\r\n//   const [form, setForm] = useState({\r\n//     questionText: \"\",\r\n//     optionsText: \"\",\r\n//     correctAnswer: \"\",\r\n//   });\r\n//   const [questionType, setQuestionType] = useState(\"MCQ\");\r\n//   const [file, setFile] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   // 🟢 Check admin login (token validation)\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"adminToken\");\r\n//     if (!token) navigate(\"/admin/login\");\r\n//   }, [navigate]);\r\n\r\n//   // 🟢 Fetch questions from DB\r\n//   useEffect(() => {\r\n//     fetchQuestions();\r\n//   }, []);\r\n\r\n//   const fetchQuestions = async () => {\r\n//     try {\r\n//       const res = await API.get(\"/questions\");\r\n//       setQuestions(res.data || []);\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert(\"Failed to load questions.\");\r\n//     }\r\n//   };\r\n\r\n//   // 🟢 Add Question Manually\r\n//   const handleAddQuestion = async (e) => {\r\n//     e.preventDefault();\r\n//     const opts =\r\n//       questionType === \"MCQ\"\r\n//         ? form.optionsText.split(\"|\").map((s) => s.trim()).filter(Boolean)\r\n//         : [];\r\n\r\n//     if (!form.questionText.trim()) {\r\n//       return alert(\"Please enter question text.\");\r\n//     }\r\n//     if (questionType === \"MCQ\" && (opts.length < 2 || !form.correctAnswer.trim())) {\r\n//       return alert(\"Please enter at least 2 options and a correct answer.\");\r\n//     }\r\n\r\n//     setLoading(true);\r\n//     try {\r\n//       await API.post(\"/questions\", {\r\n//         questionType,\r\n//         questionText: form.questionText,\r\n//         options: opts,\r\n//         correctAnswer: questionType === \"MCQ\" ? form.correctAnswer : \"\",\r\n//       });\r\n\r\n//       setForm({ questionText: \"\", optionsText: \"\", correctAnswer: \"\" });\r\n//       await fetchQuestions();\r\n//       alert(\"✅ Question added successfully!\");\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert(err.response?.data?.error || \"Failed to add question.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   // 🟢 Upload .docx question file\r\n//   const handleUpload = async () => {\r\n//     if (!file) return alert(\"Please select a file to upload.\");\r\n//     const fd = new FormData();\r\n//     fd.append(\"file\", file);\r\n\r\n//     try {\r\n//       const res = await API.post(\"/questions/upload\", fd, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n//       alert(res.data.message || \"File uploaded successfully!\");\r\n//       await fetchQuestions();\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       alert(err.response?.data?.error || \"File upload failed.\");\r\n//     }\r\n//   };\r\n\r\n//   // 🟢 Logout\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"adminToken\");\r\n//     navigate(\"/admin/login\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container container-center py-4\">\r\n//       <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n//         <h2>Admin Dashboard</h2>\r\n//         <button className=\"btn btn-outline-danger btn-sm\" onClick={handleLogout}>\r\n//           Logout\r\n//         </button>\r\n//       </div>\r\n\r\n//       <div className=\"card card-clean p-4 mb-4\">\r\n//         <h5>Add questions or upload documents that will be shown to candidates.</h5>\r\n\r\n//         {/* Add Question Form */}\r\n//         <form onSubmit={handleAddQuestion} className=\"mt-3\">\r\n//           <div className=\"mb-3\">\r\n//             <label className=\"form-label\">Question Type</label>\r\n//             <select\r\n//               className=\"form-select\"\r\n//               value={questionType}\r\n//               onChange={(e) => setQuestionType(e.target.value)}\r\n//             >\r\n//               <option value=\"MCQ\">MCQ</option>\r\n//               <option value=\"Theory\">Theory</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"mb-3\">\r\n//             <label className=\"form-label\">Question Text</label>\r\n//             <textarea\r\n//               className=\"form-control\"\r\n//               rows={questionType === \"Theory\" ? 3 : 2}\r\n//               value={form.questionText}\r\n//               onChange={(e) => setForm({ ...form, questionText: e.target.value })}\r\n//               placeholder=\"Enter your question here...\"\r\n//             />\r\n//           </div>\r\n\r\n//           {questionType === \"MCQ\" && (\r\n//             <>\r\n//               <div className=\"mb-3\">\r\n//                 <label className=\"form-label\">Options (separate by |)</label>\r\n//                 <input\r\n//                   className=\"form-control\"\r\n//                   value={form.optionsText}\r\n//                   onChange={(e) =>\r\n//                     setForm({ ...form, optionsText: e.target.value })\r\n//                   }\r\n//                   placeholder=\"Option A | Option B | Option C | Option D\"\r\n//                 />\r\n//               </div>\r\n\r\n//               <div className=\"mb-3\">\r\n//                 <label className=\"form-label\">\r\n//                   Correct Answer (exact text of one option)\r\n//                 </label>\r\n//                 <input\r\n//                   className=\"form-control\"\r\n//                   value={form.correctAnswer}\r\n//                   onChange={(e) =>\r\n//                     setForm({ ...form, correctAnswer: e.target.value })\r\n//                   }\r\n//                   placeholder=\"Enter correct answer text\"\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n\r\n//           <div className=\"mb-3 d-flex gap-2\">\r\n//             <button\r\n//               className=\"btn btn-success\"\r\n//               type=\"submit\"\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? \"Adding...\" : \"Add Question\"}\r\n//             </button>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-secondary\"\r\n//               onClick={() =>\r\n//                 setForm({ questionText: \"\", optionsText: \"\", correctAnswer: \"\" })\r\n//               }\r\n//             >\r\n//               Clear\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n\r\n//         <hr className=\"my-4\" />\r\n\r\n//         {/* Upload Document Section */}\r\n//         <div className=\"mb-3\">\r\n//           <label className=\"form-label\">Upload Document (.docx)</label>\r\n//           <input\r\n//             type=\"file\"\r\n//             className=\"form-control\"\r\n//             accept=\".docx\"\r\n//             onChange={(e) => setFile(e.target.files[0])}\r\n//           />\r\n//           <div className=\"mt-2\">\r\n//             <button className=\"btn btn-primary\" onClick={handleUpload}>\r\n//               Upload\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Display All Questions */}\r\n//       <div className=\"card card-clean p-4\">\r\n//         <h5>Available Questions</h5>\r\n\r\n//         {/* MCQ Section */}\r\n//         <h6 className=\"mt-3 text-primary\">MCQ Questions</h6>\r\n//         {questions.filter((q) => q.questionType === \"MCQ\").length === 0 && (\r\n//           <div className=\"text-muted\">No MCQs yet</div>\r\n//         )}\r\n//         {questions\r\n//           .filter((q) => q.questionType === \"MCQ\")\r\n//           .map((q, idx) => (\r\n//             <div key={q._id} className=\"mb-3 border-bottom pb-2\">\r\n//               <strong>Q{idx + 1}:</strong> {q.questionText}\r\n//               <div className=\"small text-muted\">\r\n//                 Options: {q.options.join(\" | \")}\r\n//               </div>\r\n//               <div className=\"small text-success\">\r\n//                 Correct: {q.correctAnswer}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n\r\n//         {/* Theory Section */}\r\n//         <h6 className=\"mt-4 text-primary\">Theory Questions</h6>\r\n//         {questions.filter((q) => q.questionType === \"Theory\").length === 0 && (\r\n//           <div className=\"text-muted\">No theory questions yet</div>\r\n//         )}\r\n//         {questions\r\n//           .filter((q) => q.questionType === \"Theory\")\r\n//           .map((q, idx) => (\r\n//             <div key={q._id} className=\"mb-3 border-bottom pb-2\">\r\n//               <strong>Q{idx + 1}:</strong> {q.questionText}\r\n//             </div>\r\n//           ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"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;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA9D,EAAA,CAnhBwBD,cAAc;EAAA,QACnBL,WAAW;AAAA;AAAA4F,EAAA,GADNvF,cAAc;AAAA,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}