{"ast":null,"code":"c;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/Home.css\";\n\n// export default function Home() {\n//   const [fullName, setFullName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [numQ, setNumQ] = useState(10);\n//   const navigate = useNavigate();\n\n//   const handleStart = () => {\n//     if (!fullName.trim() || !email.trim()) {\n//       return alert(\"Please enter your full name and email.\");\n//     }\n//     // Navigate to test page with state (we pass via router state)\n//     navigate(\"/test\", { state: { fullName, email, numQ } });\n//   };\n\n//   return (\n//     <div className=\"container container-center\">\n//       <div className=\"header-banner mb-4\">\n//         <h1 className=\"display-6\">VLSI Interview Assessment</h1>\n//         <p className=\"lead\">Test your knowledge of Very Large Scale Integration (VLSI) concepts</p>\n//       </div>\n\n//       <div className=\"card card-clean p-4 mb-4\">\n//         <h5>Start Your Interview Test</h5>\n//         <p className=\"text-muted\">You will be presented with randomly selected questions. Please answer to the best of your ability.</p>\n\n//         <div className=\"row g-3\">\n//           <div className=\"col-md-6\">\n//             <label className=\"form-label\">Full Name *</label>\n//             <input className=\"form-control\" placeholder=\"Enter your full name\" value={fullName} onChange={(e) => setFullName(e.target.value)} />\n//           </div>\n\n//           <div className=\"col-md-6\">\n//             <label className=\"form-label\">Email Address *</label>\n//             <input className=\"form-control\" placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//           </div>\n\n//           <div className=\"col-md-6\">\n//             <label className=\"form-label\">Number of Questions</label>\n//             <select className=\"form-select\" value={numQ} onChange={(e) => setNumQ(Number(e.target.value))}>\n//               <option value={5}>5 Questions</option>\n//               <option value={10}>10 Questions</option>\n//             </select>\n//           </div>\n\n//           <div className=\"col-12 mt-3\">\n//             <button className=\"btn btn-primary btn-lg w-100\" onClick={handleStart}>Start Test</button>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"card card-clean p-3\">\n//         <h6>Instructions</h6>\n//         <ul>\n//           <li>Read each question carefully before answering.</li>\n//           <li>Use Next and Previous to navigate.</li>\n//           <li>Submit once all questions are answered.</li>\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":["c"],"sources":["C:/Users/HP/Downloads/INTERVIEW PROCESS/INTERVIEW PROCESS/client/src/pages/Home.js"],"sourcesContent":["c\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../styles/Home.css\";\r\n\r\n// export default function Home() {\r\n//   const [fullName, setFullName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [numQ, setNumQ] = useState(10);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleStart = () => {\r\n//     if (!fullName.trim() || !email.trim()) {\r\n//       return alert(\"Please enter your full name and email.\");\r\n//     }\r\n//     // Navigate to test page with state (we pass via router state)\r\n//     navigate(\"/test\", { state: { fullName, email, numQ } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container container-center\">\r\n//       <div className=\"header-banner mb-4\">\r\n//         <h1 className=\"display-6\">VLSI Interview Assessment</h1>\r\n//         <p className=\"lead\">Test your knowledge of Very Large Scale Integration (VLSI) concepts</p>\r\n//       </div>\r\n\r\n//       <div className=\"card card-clean p-4 mb-4\">\r\n//         <h5>Start Your Interview Test</h5>\r\n//         <p className=\"text-muted\">You will be presented with randomly selected questions. Please answer to the best of your ability.</p>\r\n\r\n//         <div className=\"row g-3\">\r\n//           <div className=\"col-md-6\">\r\n//             <label className=\"form-label\">Full Name *</label>\r\n//             <input className=\"form-control\" placeholder=\"Enter your full name\" value={fullName} onChange={(e) => setFullName(e.target.value)} />\r\n//           </div>\r\n\r\n//           <div className=\"col-md-6\">\r\n//             <label className=\"form-label\">Email Address *</label>\r\n//             <input className=\"form-control\" placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n//           </div>\r\n\r\n//           <div className=\"col-md-6\">\r\n//             <label className=\"form-label\">Number of Questions</label>\r\n//             <select className=\"form-select\" value={numQ} onChange={(e) => setNumQ(Number(e.target.value))}>\r\n//               <option value={5}>5 Questions</option>\r\n//               <option value={10}>10 Questions</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"col-12 mt-3\">\r\n//             <button className=\"btn btn-primary btn-lg w-100\" onClick={handleStart}>Start Test</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"card card-clean p-3\">\r\n//         <h6>Instructions</h6>\r\n//         <ul>\r\n//           <li>Read each question carefully before answering.</li>\r\n//           <li>Use Next and Previous to navigate.</li>\r\n//           <li>Submit once all questions are answered.</li>\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAAA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}