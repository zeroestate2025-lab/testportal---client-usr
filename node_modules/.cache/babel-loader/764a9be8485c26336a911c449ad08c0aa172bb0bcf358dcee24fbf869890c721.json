{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\INTERVIEW PROCESS\\\\INTERVIEW PROCESS\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport API from \"../services/api\";\nimport \"../styles/TestPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestPage() {\n  _s();\n  var _currentQ$options;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    fullName,\n    email\n  } = location.state || {};\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [currentIdx, setCurrentIdx] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [resultSaved, setResultSaved] = useState(false);\n  const [testEnded, setTestEnded] = useState(false);\n  const [testNotStarted, setTestNotStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(null);\n\n  // 🟢 Fetch questions ONLY when admin starts test (fully backend controlled)\n  useEffect(() => {\n    if (!fullName || !email) {\n      navigate(\"/\");\n      return;\n    }\n    const fetchQuestions = async () => {\n      try {\n        var _res$data;\n        const res = await API.questions.getAll();\n\n        // 🛑 If admin hasn't started the test\n        if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.error) {\n          setTestNotStarted(true);\n          setLoading(false);\n          return;\n        }\n\n        // ✅ Admin-defined number of questions & time limit\n        setQuestions(res.data.questions || []);\n        setTimeLeft((res.data.timeLimit || 10) * 60); // Convert minutes → seconds\n      } catch (err) {\n        console.error(\"❌ Error fetching questions:\", err);\n        alert(\"Please wait for admin to start the test.\");\n        setTestNotStarted(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [fullName, email, navigate]);\n\n  // 🕒 Countdown timer based on admin-defined time\n  useEffect(() => {\n    if (timeLeft === null) return;\n    if (timeLeft <= 0) {\n      alert(\"⏰ Time’s up! Submitting your test automatically.\");\n      handleSubmit();\n      return;\n    }\n    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n\n  // 🛑 Detect tab switch, reload, or page exit → terminate test\n  useEffect(() => {\n    const handleBeforeUnload = e => {\n      e.preventDefault();\n      e.returnValue = \"\";\n      setTestEnded(true);\n    };\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        setTestEnded(true);\n      }\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n    };\n  }, []);\n\n  // 🟢 Record answer\n  const handleSelect = (questionId, value) => {\n    setAnswers({\n      ...answers,\n      [questionId]: value\n    });\n  };\n\n  // 🟢 Navigation\n  const goNext = () => {\n    if (currentIdx < questions.length - 1) setCurrentIdx(currentIdx + 1);\n  };\n  const goPrev = () => {\n    if (currentIdx > 0) setCurrentIdx(currentIdx - 1);\n  };\n\n  // 🟢 Submit test (auto or manual)\n  const handleSubmit = async () => {\n    if (submitted) return;\n    if (Object.keys(answers).length < questions.length) {\n      if (!window.confirm(\"Some questions are unanswered. Submit anyway?\")) return;\n    }\n    let s = 0;\n    questions.forEach(q => {\n      if (q.questionType === \"MCQ\" && answers[q._id] === q.correctAnswer) s += 1;\n    });\n    setScore(s);\n    setSubmitted(true);\n    const formattedAnswers = questions.map(q => ({\n      question: q.questionText,\n      userAnswer: answers[q._id] || \"Not answered\",\n      correctAnswer: q.correctAnswer || \"\",\n      isCorrect: q.questionType === \"MCQ\" ? answers[q._id] === q.correctAnswer : null,\n      type: q.questionType || \"Theory\"\n    }));\n    try {\n      await API.tests.submit({\n        name: fullName,\n        email,\n        answers: formattedAnswers,\n        totalQuestions: questions.length,\n        correctAnswers: s,\n        scorePercent: (s / questions.length * 100).toFixed(2)\n      });\n      setResultSaved(true);\n    } catch (err) {\n      console.error(\"❌ Error saving result:\", err);\n      alert(\"Failed to save result to server.\");\n    }\n  };\n\n  // 🛑 If user switched tab or reloaded\n  if (testEnded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container container-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-clean p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-danger\",\n          children: \"\\u26A0\\uFE0F Test Ended\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your session ended because you switched tabs, reloaded, or left the page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-3 text-success\",\n          children: \"Thank you for your time!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate(\"/\"),\n          children: \"Go to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 🛑 If test not started by admin\n  if (testNotStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container container-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-clean p-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-warning\",\n          children: \"\\u26A0\\uFE0F Test Not Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The test has not been started by the administrator.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-2\",\n          children: \"Please contact admin to start your test.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate(\"/\"),\n          children: \"Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 🟢 Loading screen\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container container-center\",\n    children: \"Loading questions\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 12\n  }, this);\n  if (!questions || questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container container-center\",\n    children: \"No questions available. Please try later.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 7\n  }, this);\n\n  // 🟢 After submission — review screen\n  if (submitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container container-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-clean p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-success\",\n          children: \"Test Completed Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), \" (\", email, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Your Score: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), resultSaved && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success mt-2\",\n          children: \"\\u2705 Your result has been recorded successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Review Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"review-question\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"Q\", idx + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), \" \", q.questionText, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Your answer:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: q.questionType === \"MCQ\" ? answers[q._id] === q.correctAnswer ? \"text-success\" : \"text-danger\" : \"text-primary\",\n                children: answers[q._id] || \"Not answered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), q.questionType === \"MCQ\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Correct answer:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-success\",\n                children: q.correctAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, q._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary me-2\",\n            onClick: () => navigate(\"/\"),\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            onClick: () => window.location.reload(),\n            children: \"Retake Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 🟢 Active test page\n  const currentQ = questions[currentIdx];\n  const selectedAnswer = answers[currentQ._id] || \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card test-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-danger fw-bold\",\n            children: [\"Candidate: \", fullName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-primary me-2\",\n            children: [\"Question \", currentIdx + 1, \" / \", questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-danger\",\n            children: [\"\\u23F3 \", Math.floor(timeLeft / 60), \":\", (timeLeft % 60).toString().padStart(2, \"0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"question-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Q\", currentIdx + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), \" \", currentQ.questionText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), currentQ.questionType === \"MCQ\" && ((_currentQ$options = currentQ.options) === null || _currentQ$options === void 0 ? void 0 : _currentQ$options.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: currentQ.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: `option-item ${selectedAnswer === opt ? \"selected\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${currentQ._id}`,\n              value: opt,\n              checked: selectedAnswer === opt,\n              onChange: e => handleSelect(currentQ._id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), opt]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"theory-input\",\n          placeholder: \"Type your answer here...\",\n          value: selectedAnswer,\n          onChange: e => handleSelect(currentQ._id, e.target.value),\n          rows: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary me-3\",\n            onClick: goPrev,\n            disabled: currentIdx === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: goNext,\n            disabled: currentIdx === questions.length - 1,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: handleSubmit,\n            children: \"Submit Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/Home.css\";\n\n// export default function Home() {\n//   const [fullName, setFullName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [numQ, setNumQ] = useState(10);\n//   const navigate = useNavigate();\n\n//   const handleStart = () => {\n//     if (!fullName.trim() || !email.trim()) {\n//       return alert(\"Please enter your full name and email.\");\n//     }\n//     // Navigate to test page with state (we pass via router state)\n//     navigate(\"/test\", { state: { fullName, email, numQ } });\n//   };\n\n//   return (\n//     <div className=\"container container-center\">\n//       <div className=\"header-banner mb-4\">\n//         <h1 className=\"display-6\">VLSI Interview Assessment</h1>\n//         <p className=\"lead\">Test your knowledge of Very Large Scale Integration (VLSI) concepts</p>\n//       </div>\n\n//       <div className=\"card card-clean p-4 mb-4\">\n//         <h5>Start Your Interview Test</h5>\n//         <p className=\"text-muted\">You will be presented with randomly selected questions. Please answer to the best of your ability.</p>\n\n//         <div className=\"row g-3\">\n//           <div className=\"col-md-6\">\n//             <label className=\"form-label\">Full Name *</label>\n//             <input className=\"form-control\" placeholder=\"Enter your full name\" value={fullName} onChange={(e) => setFullName(e.target.value)} />\n//           </div>\n\n//           <div className=\"col-md-6\">\n//             <label className=\"form-label\">Email Address *</label>\n//             <input className=\"form-control\" placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//           </div>\n\n//           {/* <div className=\"col-md-6\">\n//             <label className=\"form-label\">Number of Questions</label>\n//             <select className=\"form-select\" value={numQ} onChange={(e) => setNumQ(Number(e.target.value))}>\n//               <option value={5}>5 Questions</option>\n//               <option value={10}>10 Questions</option>\n//             </select>\n//           </div> */}\n\n//           <div className=\"col-12 mt-3\">\n//             <button className=\"btn btn-primary btn-lg w-100\" onClick={handleStart}>Start Test</button>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div className=\"card card-clean p-3\">\n//         <h6>Instructions</h6>\n//         <ul>\n//           <li>Read each question carefully before answering.</li>\n//           <li>Use Next and Previous to navigate.</li>\n//           <li>Submit once all questions are answered.</li>\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n_s(TestPage, \"Ylksd7z7Z9qiSMWGUMCXltKXFm4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","API","jsxDEV","_jsxDEV","TestPage","_s","_currentQ$options","location","navigate","fullName","email","state","questions","setQuestions","answers","setAnswers","currentIdx","setCurrentIdx","loading","setLoading","submitted","setSubmitted","score","setScore","resultSaved","setResultSaved","testEnded","setTestEnded","testNotStarted","setTestNotStarted","timeLeft","setTimeLeft","fetchQuestions","_res$data","res","getAll","data","error","timeLimit","err","console","alert","handleSubmit","timer","setTimeout","clearTimeout","handleBeforeUnload","e","preventDefault","returnValue","handleVisibilityChange","document","hidden","window","addEventListener","removeEventListener","handleSelect","questionId","value","goNext","length","goPrev","Object","keys","confirm","s","forEach","q","questionType","_id","correctAnswer","formattedAnswers","map","question","questionText","userAnswer","isCorrect","type","tests","submit","name","totalQuestions","correctAnswers","scorePercent","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","idx","reload","currentQ","selectedAnswer","Math","floor","toString","padStart","options","opt","i","checked","onChange","target","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/INTERVIEW PROCESS/INTERVIEW PROCESS/client/src/pages/Home.js"],"sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport API from \"../services/api\";\r\nimport \"../styles/TestPage.css\";\r\n\r\nexport default function TestPage() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { fullName, email } = location.state || {};\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [currentIdx, setCurrentIdx] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [resultSaved, setResultSaved] = useState(false);\r\n  const [testEnded, setTestEnded] = useState(false);\r\n  const [testNotStarted, setTestNotStarted] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n\r\n  // 🟢 Fetch questions ONLY when admin starts test (fully backend controlled)\r\n  useEffect(() => {\r\n    if (!fullName || !email) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const res = await API.questions.getAll();\r\n\r\n        // 🛑 If admin hasn't started the test\r\n        if (res.data?.error) {\r\n          setTestNotStarted(true);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        // ✅ Admin-defined number of questions & time limit\r\n        setQuestions(res.data.questions || []);\r\n        setTimeLeft((res.data.timeLimit || 10) * 60); // Convert minutes → seconds\r\n      } catch (err) {\r\n        console.error(\"❌ Error fetching questions:\", err);\r\n        alert(\"Please wait for admin to start the test.\");\r\n        setTestNotStarted(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [fullName, email, navigate]);\r\n\r\n  // 🕒 Countdown timer based on admin-defined time\r\n  useEffect(() => {\r\n    if (timeLeft === null) return;\r\n    if (timeLeft <= 0) {\r\n      alert(\"⏰ Time’s up! Submitting your test automatically.\");\r\n      handleSubmit();\r\n      return;\r\n    }\r\n\r\n    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [timeLeft]);\r\n\r\n  // 🛑 Detect tab switch, reload, or page exit → terminate test\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (e) => {\r\n      e.preventDefault();\r\n      e.returnValue = \"\";\r\n      setTestEnded(true);\r\n    };\r\n\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden) {\r\n        setTestEnded(true);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n    };\r\n  }, []);\r\n\r\n  // 🟢 Record answer\r\n  const handleSelect = (questionId, value) => {\r\n    setAnswers({ ...answers, [questionId]: value });\r\n  };\r\n\r\n  // 🟢 Navigation\r\n  const goNext = () => {\r\n    if (currentIdx < questions.length - 1) setCurrentIdx(currentIdx + 1);\r\n  };\r\n  const goPrev = () => {\r\n    if (currentIdx > 0) setCurrentIdx(currentIdx - 1);\r\n  };\r\n\r\n  // 🟢 Submit test (auto or manual)\r\n  const handleSubmit = async () => {\r\n    if (submitted) return;\r\n    if (Object.keys(answers).length < questions.length) {\r\n      if (!window.confirm(\"Some questions are unanswered. Submit anyway?\")) return;\r\n    }\r\n\r\n    let s = 0;\r\n    questions.forEach((q) => {\r\n      if (q.questionType === \"MCQ\" && answers[q._id] === q.correctAnswer) s += 1;\r\n    });\r\n\r\n    setScore(s);\r\n    setSubmitted(true);\r\n\r\n    const formattedAnswers = questions.map((q) => ({\r\n      question: q.questionText,\r\n      userAnswer: answers[q._id] || \"Not answered\",\r\n      correctAnswer: q.correctAnswer || \"\",\r\n      isCorrect: q.questionType === \"MCQ\" ? answers[q._id] === q.correctAnswer : null,\r\n      type: q.questionType || \"Theory\",\r\n    }));\r\n\r\n    try {\r\n      await API.tests.submit({\r\n        name: fullName,\r\n        email,\r\n        answers: formattedAnswers,\r\n        totalQuestions: questions.length,\r\n        correctAnswers: s,\r\n        scorePercent: ((s / questions.length) * 100).toFixed(2),\r\n      });\r\n      setResultSaved(true);\r\n    } catch (err) {\r\n      console.error(\"❌ Error saving result:\", err);\r\n      alert(\"Failed to save result to server.\");\r\n    }\r\n  };\r\n\r\n  // 🛑 If user switched tab or reloaded\r\n  if (testEnded) {\r\n    return (\r\n      <div className=\"container container-center\">\r\n        <div className=\"card card-clean p-4 text-center\">\r\n          <h3 className=\"text-danger\">⚠️ Test Ended</h3>\r\n          <p>Your session ended because you switched tabs, reloaded, or left the page.</p>\r\n          <h4 className=\"mt-3 text-success\">Thank you for your time!</h4>\r\n          <button className=\"btn btn-primary mt-3\" onClick={() => navigate(\"/\")}>\r\n            Go to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 🛑 If test not started by admin\r\n  if (testNotStarted) {\r\n    return (\r\n      <div className=\"container container-center\">\r\n        <div className=\"card card-clean p-4 text-center\">\r\n          <h3 className=\"text-warning\">⚠️ Test Not Active</h3>\r\n          <p>The test has not been started by the administrator.</p>\r\n          <h5 className=\"mt-2\">Please contact admin to start your test.</h5>\r\n          <button className=\"btn btn-primary mt-3\" onClick={() => navigate(\"/\")}>\r\n            Back to Home\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 🟢 Loading screen\r\n  if (loading)\r\n    return <div className=\"container container-center\">Loading questions…</div>;\r\n\r\n  if (!questions || questions.length === 0)\r\n    return (\r\n      <div className=\"container container-center\">\r\n        No questions available. Please try later.\r\n      </div>\r\n    );\r\n\r\n  // 🟢 After submission — review screen\r\n  if (submitted) {\r\n    return (\r\n      <div className=\"container container-center\">\r\n        <div className=\"card card-clean p-4\">\r\n          <h3 className=\"text-success\">Test Completed Successfully</h3>\r\n          <p>\r\n            <strong>{fullName}</strong> ({email})\r\n          </p>\r\n          <h4>\r\n            Your Score: {score} / {questions.length}\r\n          </h4>\r\n\r\n          {resultSaved && (\r\n            <div className=\"alert alert-success mt-2\">\r\n              ✅ Your result has been recorded successfully!\r\n            </div>\r\n          )}\r\n\r\n          <hr />\r\n          <h5>Review Answers</h5>\r\n          <div>\r\n            {questions.map((q, idx) => (\r\n              <div className=\"review-question\" key={q._id}>\r\n                <b>Q{idx + 1}:</b> {q.questionText}\r\n                <div>\r\n                  Your answer:{\" \"}\r\n                  <span\r\n                    className={\r\n                      q.questionType === \"MCQ\"\r\n                        ? answers[q._id] === q.correctAnswer\r\n                          ? \"text-success\"\r\n                          : \"text-danger\"\r\n                        : \"text-primary\"\r\n                    }\r\n                  >\r\n                    {answers[q._id] || \"Not answered\"}\r\n                  </span>\r\n                </div>\r\n                {q.questionType === \"MCQ\" && (\r\n                  <div>\r\n                    Correct answer:{\" \"}\r\n                    <span className=\"text-success\">{q.correctAnswer}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"mt-4\">\r\n            <button className=\"btn btn-primary me-2\" onClick={() => navigate(\"/\")}>\r\n              Back to Home\r\n            </button>\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              onClick={() => window.location.reload()}\r\n            >\r\n              Retake Test\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 🟢 Active test page\r\n  const currentQ = questions[currentIdx];\r\n  const selectedAnswer = answers[currentQ._id] || \"\";\r\n\r\n  return (\r\n    <div className=\"test-container\">\r\n      <div className=\"card test-card\">\r\n        {/* Header */}\r\n        <div className=\"test-header\">\r\n          <div>\r\n            <h5 className=\"text-danger fw-bold\">Candidate: {fullName}</h5>\r\n            <small className=\"text-muted\">{email}</small>\r\n          </div>\r\n          <div>\r\n            <span className=\"badge bg-primary me-2\">\r\n              Question {currentIdx + 1} / {questions.length}\r\n            </span>\r\n            <span className=\"badge bg-danger\">\r\n              ⏳ {Math.floor(timeLeft / 60)}:\r\n              {(timeLeft % 60).toString().padStart(2, \"0\")}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Question Body */}\r\n        <div className=\"test-body\">\r\n          <h6 className=\"question-text\">\r\n            <b>Q{currentIdx + 1}:</b> {currentQ.questionText}\r\n          </h6>\r\n\r\n          {currentQ.questionType === \"MCQ\" && currentQ.options?.length > 0 ? (\r\n            <div className=\"options-container\">\r\n              {currentQ.options.map((opt, i) => (\r\n                <label\r\n                  key={i}\r\n                  className={`option-item ${\r\n                    selectedAnswer === opt ? \"selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`question-${currentQ._id}`}\r\n                    value={opt}\r\n                    checked={selectedAnswer === opt}\r\n                    onChange={(e) => handleSelect(currentQ._id, e.target.value)}\r\n                  />\r\n                  {opt}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <textarea\r\n              className=\"theory-input\"\r\n              placeholder=\"Type your answer here...\"\r\n              value={selectedAnswer}\r\n              onChange={(e) => handleSelect(currentQ._id, e.target.value)}\r\n              rows={5}\r\n            ></textarea>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"test-footer\">\r\n          <div>\r\n            <button\r\n              className=\"btn btn-secondary me-3\"\r\n              onClick={goPrev}\r\n              disabled={currentIdx === 0}\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={goNext}\r\n              disabled={currentIdx === questions.length - 1}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n\r\n          <div>\r\n            <button className=\"btn btn-success\" onClick={handleSubmit}>\r\n              Submit Test\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"../styles/Home.css\";\r\n\r\n// export default function Home() {\r\n//   const [fullName, setFullName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [numQ, setNumQ] = useState(10);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleStart = () => {\r\n//     if (!fullName.trim() || !email.trim()) {\r\n//       return alert(\"Please enter your full name and email.\");\r\n//     }\r\n//     // Navigate to test page with state (we pass via router state)\r\n//     navigate(\"/test\", { state: { fullName, email, numQ } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container container-center\">\r\n//       <div className=\"header-banner mb-4\">\r\n//         <h1 className=\"display-6\">VLSI Interview Assessment</h1>\r\n//         <p className=\"lead\">Test your knowledge of Very Large Scale Integration (VLSI) concepts</p>\r\n//       </div>\r\n\r\n//       <div className=\"card card-clean p-4 mb-4\">\r\n//         <h5>Start Your Interview Test</h5>\r\n//         <p className=\"text-muted\">You will be presented with randomly selected questions. Please answer to the best of your ability.</p>\r\n\r\n//         <div className=\"row g-3\">\r\n//           <div className=\"col-md-6\">\r\n//             <label className=\"form-label\">Full Name *</label>\r\n//             <input className=\"form-control\" placeholder=\"Enter your full name\" value={fullName} onChange={(e) => setFullName(e.target.value)} />\r\n//           </div>\r\n\r\n//           <div className=\"col-md-6\">\r\n//             <label className=\"form-label\">Email Address *</label>\r\n//             <input className=\"form-control\" placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n//           </div>\r\n\r\n//           {/* <div className=\"col-md-6\">\r\n//             <label className=\"form-label\">Number of Questions</label>\r\n//             <select className=\"form-select\" value={numQ} onChange={(e) => setNumQ(Number(e.target.value))}>\r\n//               <option value={5}>5 Questions</option>\r\n//               <option value={10}>10 Questions</option>\r\n//             </select>\r\n//           </div> */}\r\n\r\n//           <div className=\"col-12 mt-3\">\r\n//             <button className=\"btn btn-primary btn-lg w-100\" onClick={handleStart}>Start Test</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"card card-clean p-3\">\r\n//         <h6>Instructions</h6>\r\n//         <ul>\r\n//           <li>Read each question carefully before answering.</li>\r\n//           <li>Use Next and Previous to navigate.</li>\r\n//           <li>Submit once all questions are answered.</li>\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}