{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  timeout: 10000\n});\nAPI.interceptors.request.use(config => {\n  const adminToken = localStorage.getItem(\"adminToken\");\n  const userToken = localStorage.getItem(\"userToken\");\n  const token = adminToken || userToken;\n  if (token) config.headers.Authorization = token;\n  return config;\n}, error => Promise.reject(error));\n\n// Admin Authentication APIs\nconst adminAuth = {\n  login: credentials => API.post(\"/admin/login\", credentials),\n  register: data => API.post(\"/admin/register\", data)\n};\n\n// Questions APIs\nconst questions = {\n  getAll: () => API.get(\"/questions\"),\n  create: question => API.post(\"/questions\", question),\n  update: (id, question) => API.put(`/questions/${id}`, question),\n  delete: id => API.delete(`/questions/${id}`),\n  uploadDoc: formData => API.post(\"/questions/uploads\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  })\n};\n\n// Test Results APIs\nconst tests = {\n  getAll: () => API.get(\"/tests\"),\n  submit: testData => API.post(\"/tests\", testData),\n  getById: id => API.get(`/tests/${id}`),\n  validate: (id, validationData) => API.put(`/tests/${id}/validate`, validationData)\n};\n\n// Combined API object\nconst combinedAPI = {\n  ...API,\n  adminAuth,\n  questions,\n  tests\n};\nexport default combinedAPI;","map":{"version":3,"names":["axios","API","create","baseURL","timeout","interceptors","request","use","config","adminToken","localStorage","getItem","userToken","token","headers","Authorization","error","Promise","reject","adminAuth","login","credentials","post","register","data","questions","getAll","get","question","update","id","put","delete","uploadDoc","formData","tests","submit","testData","getById","validate","validationData","combinedAPI"],"sources":["C:/Users/HP/Downloads/INTERVIEW PROCESS/INTERVIEW PROCESS/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  timeout: 10000,\r\n});\r\n\r\nAPI.interceptors.request.use((config) => {\r\n  const adminToken = localStorage.getItem(\"adminToken\");\r\n  const userToken = localStorage.getItem(\"userToken\");\r\n  const token = adminToken || userToken;\r\n  if (token) config.headers.Authorization = token;\r\n  return config;\r\n}, (error) => Promise.reject(error));\r\n\r\n// Admin Authentication APIs\r\nconst adminAuth = {\r\n  login: (credentials) => API.post(\"/admin/login\", credentials),\r\n  register: (data) => API.post(\"/admin/register\", data),\r\n};\r\n\r\n// Questions APIs\r\nconst questions = {\r\n  getAll: () => API.get(\"/questions\"),\r\n  create: (question) => API.post(\"/questions\", question),\r\n  update: (id, question) => API.put(`/questions/${id}`, question),\r\n  delete: (id) => API.delete(`/questions/${id}`),\r\n  uploadDoc: (formData) => API.post(\"/questions/uploads\", formData, {\r\n    headers: { \"Content-Type\": \"multipart/form-data\" }\r\n  }),\r\n};\r\n\r\n// Test Results APIs\r\nconst tests = {\r\n  getAll: () => API.get(\"/tests\"),\r\n  submit: (testData) => API.post(\"/tests\", testData),\r\n  getById: (id) => API.get(`/tests/${id}`),\r\n  validate: (id, validationData) => API.put(`/tests/${id}/validate`, validationData),\r\n};\r\n\r\n// Combined API object\r\nconst combinedAPI = {\r\n  ...API,\r\n  adminAuth,\r\n  questions,\r\n  tests,\r\n};\r\n\r\nexport default combinedAPI;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EACrD,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD,MAAME,KAAK,GAAGJ,UAAU,IAAIG,SAAS;EACrC,IAAIC,KAAK,EAAEL,MAAM,CAACM,OAAO,CAACC,aAAa,GAAGF,KAAK;EAC/C,OAAOL,MAAM;AACf,CAAC,EAAGQ,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC;;AAEpC;AACA,MAAMG,SAAS,GAAG;EAChBC,KAAK,EAAGC,WAAW,IAAKpB,GAAG,CAACqB,IAAI,CAAC,cAAc,EAAED,WAAW,CAAC;EAC7DE,QAAQ,EAAGC,IAAI,IAAKvB,GAAG,CAACqB,IAAI,CAAC,iBAAiB,EAAEE,IAAI;AACtD,CAAC;;AAED;AACA,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAEA,CAAA,KAAMzB,GAAG,CAAC0B,GAAG,CAAC,YAAY,CAAC;EACnCzB,MAAM,EAAG0B,QAAQ,IAAK3B,GAAG,CAACqB,IAAI,CAAC,YAAY,EAAEM,QAAQ,CAAC;EACtDC,MAAM,EAAEA,CAACC,EAAE,EAAEF,QAAQ,KAAK3B,GAAG,CAAC8B,GAAG,CAAC,cAAcD,EAAE,EAAE,EAAEF,QAAQ,CAAC;EAC/DI,MAAM,EAAGF,EAAE,IAAK7B,GAAG,CAAC+B,MAAM,CAAC,cAAcF,EAAE,EAAE,CAAC;EAC9CG,SAAS,EAAGC,QAAQ,IAAKjC,GAAG,CAACqB,IAAI,CAAC,oBAAoB,EAAEY,QAAQ,EAAE;IAChEpB,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB;EACnD,CAAC;AACH,CAAC;;AAED;AACA,MAAMqB,KAAK,GAAG;EACZT,MAAM,EAAEA,CAAA,KAAMzB,GAAG,CAAC0B,GAAG,CAAC,QAAQ,CAAC;EAC/BS,MAAM,EAAGC,QAAQ,IAAKpC,GAAG,CAACqB,IAAI,CAAC,QAAQ,EAAEe,QAAQ,CAAC;EAClDC,OAAO,EAAGR,EAAE,IAAK7B,GAAG,CAAC0B,GAAG,CAAC,UAAUG,EAAE,EAAE,CAAC;EACxCS,QAAQ,EAAEA,CAACT,EAAE,EAAEU,cAAc,KAAKvC,GAAG,CAAC8B,GAAG,CAAC,UAAUD,EAAE,WAAW,EAAEU,cAAc;AACnF,CAAC;;AAED;AACA,MAAMC,WAAW,GAAG;EAClB,GAAGxC,GAAG;EACNkB,SAAS;EACTM,SAAS;EACTU;AACF,CAAC;AAED,eAAeM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}